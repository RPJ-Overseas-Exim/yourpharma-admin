package partials

import "RPJ-Overseas-Exim/yourpharma-admin/templ/icons"
import "RPJ-Overseas-Exim/yourpharma-admin/pkg/types"
import "strconv"

templ AddCustomerForm(){
    <div
        onclick="hideFormFromFilter(this)"
        id={"add-form-filter"}
        class="hidden absolute w-full h-full top-0 left-0 bg-background-muted opacity-10"></div>
    <form
        hx-post="/customers"
        hx-target="#customer-page"
        hx-swap="outerHTML"
        class="hidden absolute md:w-1/3 h-full top-0 right-0 bg-background rounded-tl-xl rounded-bl-xl px-4 py-2 border border-border"
    >
        <button
            type="button"
            onclick="hideFormFromContainer(this)"
            class="text-green-600 font-semibold text-xl flex gap-x-2 items-center mb-3"
        >
            @icons.Back()
            <span class="whitespace-nowrap">Add Customer Details</span>
        </button>

        <div class="space-y-3">
            @CustomerTextFormField(
                "Customer Name",
                "Enter customer name",
                "name",
                "",
                "true",
            )
            @CustomerEmailFormField(
                "Customer Email",
                "Enter customer email",
                "email",
                "",
                "true",
            )
            @CustomerNumberFormField(
                "Customer Number",
                "Enter customer number",
                "number",
                nil,
                "false",
            )
            @CustomerTextFormField(
                "Customer Address",
                "Enter customer address",
                "address",
                "",
                "false",
            )
        </div>
        <div class="w-full space-y-2 mt-5">
                @Button(
                    "submit",
                    "w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-background-muted text-lg font-semibold",
                ){
                   Add Customer 
                }
                @Button(
                    "reset",
                    "w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-red-600 hover:text-white text-lg font-semibold",
                ){
                   Reset
                }
            </div>

    </form>
}

// show details form =========================================
templ CustomerForm(customer types.Customer){
    <div
        onclick="hideFormFromFilter(this)"
        id={"form-filter-"+ customer.Email}
        class="hidden absolute w-full h-full top-0 left-0 bg-background-muted opacity-10"></div>
    <div
        id={"form-container-"+ customer.Email}
        class="hidden absolute md:w-1/3 h-full top-0 right-0 bg-background rounded-tl-xl rounded-bl-xl px-4 py-2 border border-border"
    >
        <button
            type="button"
            onclick="hideFormFromContainer(this)"
            class="text-green-600 font-semibold text-xl flex gap-x-2 items-center"
        >
            @icons.Back()
            <span class="whitespace-nowrap">Customer Details</span>
        </button>

        <div class="w-full flex flex-col gap-y-2 mt-3">
            <div class="flex gap-x-2 items-center">
                <div class="text-foreground text-lg font-semibold">Name :</div>
                <div onClick="copyText(this)" class="flex gap-x-2">
                    <div class="text-foreground-muted text-lg copy">{customer.Name}</div>
                    <div class="w-5 text-foreground-muted cursor-pointer">
                        @icons.Copy()
                    </div>
                </div>
            </div>

            <div class="flex gap-x-2 items-center">
                <div class="text-foreground text-lg font-semibold">Email :</div>
                <div onClick="copyText(this)" class="flex gap-x-2">
                    <div class="text-lg text-foreground-muted copy">{customer.Email}</div>
                    <div class="w-5 text-foreground-muted cursor-pointer">
                    @icons.Copy()
                    </div>
                </div>
            </div>

            <div class="flex gap-x-2 items-center">
                <div class="text-foreground text-lg font-semibold">Address :</div>
                <div onClick="copyText(this)" class="flex gap-x-2">
                    <div class="text-foreground-muted text-lg copy">{customer.Address}</div>
                    <div class="w-5 text-foreground-muted cursor-pointer">
                        @icons.Copy()
                    </div>
                </div>
            </div>

            <div class="flex gap-x-2 items-center">
                <div class="text-foreground text-lg font-semibold">Phone No. :</div>
                <div onClick="copyText(this)" class="flex gap-x-2">
                    <div class="text-foreground-muted text-lg copy">{strconv.Itoa(*customer.Number)}</div>
                    <div class="w-5 text-foreground-muted cursor-pointer">
                        @icons.Copy()
                    </div>
                </div>
            </div>

            <div class="w-full space-y-2">
                <div
                onclick="showForm(this)"
                class="">
                    @Button("button", "w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-background-muted text-lg font-semibold"){
                       Edit Customer 
                    }
                </div>
                @EditCustomerForm(customer)

                <div
                    hx-delete={"/customers/"+customer.Id}
                    hx-trigger="click"
                    hx-target="#customer-page"
                    hx-swap="outerHTML"
                    class=""
                >
                    @Button("button", "w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-red-600 hover:text-white text-lg font-semibold"){
                        Delete Customer 
                    }
                </div>
            </div>

        </div>
    </div>
}

// edit customer form ================================
templ EditCustomerForm(customer types.Customer){
    <div
        onclick="hideFormFromFilter(this)"
        id={"add-form-filter"}
        class="hidden absolute w-full h-full top-0 left-0 bg-background-muted opacity-10"></div>
    <form
        hx-put={"/customers/"+customer.Id}
        hx-target="#customer-page"
        hx-swap="outerHTML"
        class="hidden absolute w-full h-full -top-2 right-0 bg-background rounded-tl-xl rounded-bl-xl px-4 py-2 border border-border"
    >
        <button
            type="button"
            onclick="hideFormFromContainer(this)"
            class="text-green-600 font-semibold text-xl flex gap-x-2 items-center mb-3"
        >
            @icons.Back()
            <span class="whitespace-nowrap">Edit Customer Details</span>
        </button>

        <div class="space-y-3">
            @CustomerTextFormField(
                "Customer Name",
                "Enter customer name",
                "name",
                customer.Name,
                "true",
            )
            @CustomerEmailFormField(
                "Customer Email",
                "Enter customer email",
                "email",
                customer.Email,
                "true",
            )
            @CustomerNumberFormField(
                "Customer Number",
                "Enter customer number",
                "number",
                customer.Number,
                "false",
            )
            @CustomerTextFormField(
                "Customer Address",
                "Enter customer address",
                "address",
                customer.Address,
                "false",
            )
        </div>
        <div class="w-full space-y-2 mt-5">
                @Button(
                    "submit",
                    "w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-background-muted text-lg font-semibold",
                ){
                   Edit 
                }
                @Button(
                    "reset",
                    "w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-red-600 hover:text-white text-lg font-semibold",
                ){
                   Reset
                }
            </div>

    </form>
}

// customer form fields =========================================================
templ CustomerTextFormField(label, placeholder, name, value, required string){
    <div class="flex flex-col gap-y-2">
        <label
            for={name}
            class="text-left text-semibold text-lg"
        >
            {label}
        </label>
        <input
            class="px-4 text-lg border-b border-border bg-transparent active:outline-none hover:outline-none py-0"
            type="text"
            name={name}
            id={name}
            placeholder={placeholder}
            if len(value) != 0 {
                value={value}
            }
            minlength="3"
            if required == "true" {
                required
            }
        />
    </div>
}

templ CustomerEmailFormField(label, placeholder, name, value string, required string){
    <div class="flex flex-col gap-y-2">
        <label
            for={name}
            class="text-left text-semibold text-lg"
        >
            {label}
        </label>
        <input
            class="px-4 text-lg border-b border-border bg-transparent active:outline-none hover:outline-none py-0"
            type="email"
            name={name}
            id={name}
            placeholder={placeholder}
            if len(value) != 0 {
                value={value}
            }
            if required == "true" {
                required
            }
        />
    </div>
}

templ CustomerNumberFormField(label, placeholder, name string, value *int, required string){
    <div class="flex flex-col gap-y-2">
        <label
            for={name}
            class="text-left text-semibold text-lg"
        >
            {label}
        </label>
        <input
            class="px-4 text-lg border-b border-border bg-transparent active:outline-none hover:outline-none py-0"
            type="tel"
            name={name}
            id={name}
            placeholder={placeholder}
            if value != nil {
                value={strconv.Itoa(*value)}
            }
            pattern="[0-9]{10,12}"
            if required == "true" {
                required
            }
        />
    </div>
}
