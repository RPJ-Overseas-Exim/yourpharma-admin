package partials

import "strconv"
import "RPJ-Overseas-Exim/yourpharma-admin/pkg/types"
import "RPJ-Overseas-Exim/yourpharma-admin/templ/icons"

templ AddOrderForm(products []types.Product){
    <div
        onclick="hideFormFromFilter(this)"
        id={"add-form-filter"}
        class="hidden absolute w-full h-full top-0 left-0 bg-background-muted opacity-10"></div>
    <form
        hx-post="/orders"
        hx-target="#order-page"
        hx-swap="outerHTML"
        class="hidden absolute md:w-1/3 h-full top-0 right-0 bg-background rounded-tl-xl rounded-bl-xl px-4 py-4 border border-border overflow-auto"
    >
        <button
            type="button"
            onclick="hideFormFromContainer(this)"
            class="text-green-600 font-semibold text-xl flex gap-x-2 items-center mb-3"
        >
            @icons.Back()
            <span class="whitespace-nowrap">Add Order Details</span>
        </button>

        <div class="space-y-3">
            @CustomerTextFormField(
                "Customer Name",
                "Enter customer name",
                "name",
                "",
                "true",
            )
            @CustomerEmailFormField(
                "Customer Email",
                "Enter customer email",
                "email",
                "",
                "true",
            )
            @CustomerNumberFormField(
                "Customer Number",
                "Enter customer number",
                "number",
                nil,
                "false",
            )
            
            <div class="flex flex-col gap-y-2">
                <label>Select product</label>
                <select name="product" id="product" class="px-4 text-lg border-b border-border bg-transparent active:outline-none hover:outline-none py-0" required>
                    for _, product := range(products){
                        <option value={product.Name} >{product.Name}</option>
                    }
                </select>
            </div>

            @ProductNumberFormField(
                "Price",
                "Enter product price",
                "price",
                0,
            )
            @ProductNumberFormField(
                "Quantity",
                "Enter product quantity",
                "quantity",
                0,
            )
        </div>
        <div class="w-full space-y-2 mt-5">
                @Button(
                    "submit",
                    "w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-background-muted text-lg font-semibold",
                ){
                   Add Order 
                }
                @Button(
                    "reset",
                    "w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-red-600 hover:text-white text-lg font-semibold",
                ){
                   Reset
                }
            </div>
    </form>
}

templ OrderForm(order types.Order){
    <div
        onclick="hideFormFromFilter(this)"
        id={"form-filter-" + order.Id}
        class="hidden absolute w-full h-full top-0 left-0 bg-background-muted opacity-10"></div>
    <div
        id={"form-container-" + order.Id}
        class="hidden absolute h-full top-0 right-0 bg-background rounded-tl-xl rounded-bl-xl px-4 py-2 border border-border"
    >
        <button
            type="button"
            onclick="hideFormFromContainer(this)"
            class="text-green-600 font-semibold text-xl"
        >Order Details</button>

        <div class="w-full flex flex-col gap-y-2 mt-3">
            <div class="flex gap-x-2 items-center">
                <div class="text-foreground text-lg font-semibold">Order Id :</div>
                <div class="text-foreground-muted text-lg">{order.Id}</div>
            </div>

            <div class="flex gap-x-2 items-center">
                <div class="text-foreground text-lg font-semibold">Status :</div>
                <div class="text-white text-lg px-4 bg-green-600 rounded-xl">{order.Status}</div>
            </div>

            <div class="flex gap-x-2 items-center">
                <div class="text-foreground text-lg font-semibold">Order Date :</div>
                // <div class="text-foreground-muted text-lg">{order.CreatedAt.String()}</div>
                <div class="text-foreground-muted text-lg">{"2024-04-23"}</div>
            </div>

            <hr class="w-full border-t border-border-muted" />

            <div class="mt-3 text-xl font-semibold text-foreground text-left"># Order Summary</div>
            <div class="flex gap-x-2 items-start justify-between">
                <div class="flex flex-col text-foreground text-base font-semibold">
                    <div>{order.Product}</div>
                    <div class="text-foreground-muted">{strconv.Itoa(order.Quantity)} units</div>
                </div>
                <div class="text-foreground-muted text-lg">$ {strconv.Itoa(order.Price)}</div>
            </div>

            <hr class="w-full border-t border-border-muted" />

            <div class="mt-3 text-xl font-semibold text-foreground text-left"># Customer</div>
            <div class="flex flex-col items-start">
                <div class="text-base font-semibold text-foreground">{order.Name}</div>
                <div class="text-base font-semibold text-foreground-muted">{order.Email}</div>
            </div>

            <hr class="w-full border-t border-border-muted" />

            <div class="mt-3 text-xl font-semibold text-foreground text-left"># Address</div>
            <div class="flex flex-col items-start">
                <div class="text-base font-semibold text-foreground-muted">{order.Address}</div>
            </div>

            <div class="w-full space-y-2">
                if order.Status != "delivered"{
                    <button
                        type="button"
                        class="w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-background-muted text-lg font-semibold"
                        hx-put={"/orders/"+order.Id}
                        hx-trigger="click"
                        hx-target="#order-page"
                        hx-swap="outerHTML"
                    >
                        if order.Status == "active"{
                            Mark as Paid
                        }
                        else if order.Status == "paid"{
                            Mark as Shipped
                        }
                        else if order.Status == "shipped"{
                            Mark as Delivered
                        }
                        
                    </button>
                    <button
                        type="button"
                        class="w-full border border-border-muted rounded flex items-center justify-center py-2 hover:bg-red-600 hover:text-white text-lg font-semibold"
                        hx-delete={"/orders/"+order.Id}
                        hx-trigger="click"
                        hx-target="#order-page"
                        hx-swap="outerHTML"
                    >
                       Cancel Order 
                    </button>
                }
                else if order.Status == "delivered"{
                    <div
                    class="bg-green-600 w-full rounded flex items-center justify-center py-2 text-lg font-semibold"
                    >
                        Order Completed
                    </div>
                }
            </div>
        </div>
    </div>
}
