package adminViews

import (
    "RPJ-Overseas-Exim/yourpharma-admin/templ/layout"
    "RPJ-Overseas-Exim/yourpharma-admin/pkg/types"
	"RPJ-Overseas-Exim/yourpharma-admin/templ/icons"
	"strconv"
)

script DeleteCustomer(OrderId string){
    console.log("Delete customer with orderId: ", OrderId)
}
script EditCustomer(OrderId string){
    console.log("Edit customer with orderId: ", OrderId)
}
script UpdateStatus(OrderId string){
    console.log("Update order status of customer with orderId: ", OrderId)
}
script hello(){
    console.log("hello")
}

templ CustomersData(data []types.Customer){
    <div class="text-foreground-muted">
        @ColClass(){
            <div class="text-sm text-center">Order Id</div>
                <div class="text-sm text-center">Name</div>
                <div class="text-sm text-center">Product</div>
                <div class="text-sm text-center">Actions</div>
        }
    </div>
    <hr class="w-full border-t border-border-muted"/>
    for _, customer := range data{
        <div class="text-md border-b border-border-muted">
            @ColClass(){
                <div class="text-center">{customer.OrderId}</div>
                <div class="text-center">{customer.Name}</div>
                <div class="text-center">{customer.Product}</div>
                <div class="flex items-center justify-center">
                    <button
                    class="hover:text-foreground-muted text-foreground"
                    onClick="showMenu(this)">
                        @icons.Menu()
                    </button>
                    @CustomerInfoContainer(customer)
                </div>
            }
        </div>
    }
}

templ Customers(){
    <div class="w-full h-full p-2 flex flex-col">
      <div class="flex items-center justify-between">
        <h2 class="text-xl font-bold">
            Customers
        </h2>
        @ExportImportFeature()
      </div>

      <div class="w-full my-2">
        @CustomersFilters()
      </div>

      <div class="w-full h-full">
        <div class="w-full rounded-md border border-border-muted border-b-0">
            {children...}
        </div>
      </div>
    </div>
}

templ CustomersIndex(title string, cmp templ.Component){
    @layout.AdminLayout(title){
        @Customers(){
            @cmp
        }
    }
}

templ ColClass(){
    <div class="grid grid-cols-4 hover:bg-background-muted py-2">
    {children...}
    </div>
}

templ CustomersFilters(){
    <div class="flex items-center gap-x-2">
    <h2>filters for customers</h2>
    </div>
}

templ ExportImportFeature(){
    <div class="w-[max-content] flex items-center gap-x-4">
        @ActionButton(hello()){
            <div class="flex gap-x-2 px-2 py-2">
                @icons.Import()
                <span>Download</span>
            </div>
        }
        @ActionButton(hello()){
           <div class="flex gap-x-2 px-2 py-2">
                @icons.Upload()
                <span>Upload</span>
            </div>
        }
    </div>
}

templ CustomerInfoContainer(customer types.Customer){
        <div class="customer-info-container hidden overflow-hidden">
            <div class="background-fill w-full h-full absolute top-0 left-0 bg-form-muted"></div>
            @CustomerInfo(customer) 
            @EditCustomerContainer(customer)
        </div>
}

templ CustomerInfo(customer types.Customer){
    <div class="customer-info absolute top-0 -right-[100%] h-full p-4 rounded-tl-lg rounded-bl-lg border border-border-muted bg-form">
        <div class="close-customer-info cursor-pointer flex gap-x-2 items-center mb-5 text-green-600">
            <div
            class="font-bold">
                @icons.Back()
            </div>
            <h2 class="text-lg font-semibold">Customer Info</h2>
        </div>

        <div class="flex flex-col gap-y-2 mb-5">
            @CustomerLabel("Order ID", customer.OrderId)
            @CustomerLabel("Name", customer.Name)
            @CustomerLabel("Email", customer.Email)
            @CustomerLabel("Product", customer.Product)
            @CustomerLabel("Quantity", strconv.Itoa(customer.Quantity) + " pills")
            @CustomerLabel("Price", "$ " + strconv.Itoa(customer.Price))
        </div>

        <div class="flex flex-col gap-y-2">
            <div class="text-green-600 text-lg">Actions</div>
            @ActionButton(EditCustomer(customer.OrderId)){
                <h2 class="px-4 py-2">Edit Customer</h2>
            }
            @ActionButton(UpdateStatus(customer.OrderId)){
                <h2 class="px-4 py-2">Update Status</h2>
            }
            @ActionButton(DeleteCustomer(customer.OrderId)){
                <div class="bg-red-600 hover:bg-red-700 px-4 py-2 text-white font-semibold rounded-md">Delete Customer</div>
            }
        </div>
    </div>
}

templ EditCustomerContainer(customer types.Customer){
    <div class="edit-customer-container absolute top-0 -right-[100%] h-full p-4 rounded-tl-lg rounded-bl-lg border border-border-muted bg-form">
        <div class="close-customer-info cursor-pointer flex gap-x-2 items-center mb-5 text-green-600">
            <div
            class="font-bold">
                @icons.Back()
            </div>
            <h2 class="text-lg font-semibold">Edit Customer</h2>
        </div>

        <form class="flex flex-col gap-y-2">
            @CustomerInputLabel("Order Id", "orderId", "text", customer.OrderId)
            @CustomerInputLabel("Name", "name", "text", customer.Name)
            @CustomerInputLabel("Email", "email", "email", customer.Email)
            @CustomerInputLabel("Product", "product", "text", customer.Product)
            @CustomerInputLabel("Price", "price", "number", strconv.Itoa(customer.Price))
            @CustomerInputLabel("Quantity", "quantity", "number", strconv.Itoa(customer.Quantity))

            <div class="mt-5 flex flex-col gap-y-2">
                @ActionButton(hello()){
                    <div class=" flex items-center justify-center px-4 py-2">Submit</div>
                }
                @ActionButton(hello()){
                    <div class=" flex items-center justify-center px-4 py-2 rounded-lg text-white font-semibold bg-red-600 hover:bg-red-700">
                        Cancel
                    </div>
                }
            </div>
        </form>
    </div>
}

templ CustomerLabel(label, value string){
    <div class="flex gap-x-4">
        <div class="text-lg text-foreground-muted font-semibold">{label} :</div>        
        <div class="text-md">{value}</div>
    </div>
}

templ ActionButton(scriptAction templ.ComponentScript){
    <button
    type="button"
    onClick={scriptAction}
    class="w-full border border-border-muted rounded-md hover:bg-background-muted">
       {children...} 
    </button>
}

templ CustomerInputLabel(label, name, inputType, value string){
    <div class="flex items-center gap-x-4">
        <label class="text-lg text-foreground-muted font-semibold">{label} :</label>        
        <input
            type={inputType}
            value={value}
            name={name}
            id={name}
            placeholder={label}
            class="bg-background rounded text-lg border border-border-muted px-4 py-2"
        />
    </div>
}
